apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
        release {
            keyAlias rootProject.ext.signConfig.keyAlias
            keyPassword rootProject.ext.signConfig.keyPassword
            storeFile file(rootProject.ext.signConfig.storeFile)
            storePassword rootProject.ext.signConfig.storePassword
        }
        debug {
            keyAlias rootProject.ext.signConfig.keyAlias
            keyPassword rootProject.ext.signConfig.keyPassword
            storeFile file(rootProject.ext.signConfig.storeFile)
            storePassword rootProject.ext.signConfig.storePassword
        }
    }

    buildTypes {
        release {
            // 是否进行混淆
            minifyEnabled true
            // 去除没有用到的资源文件，要求minifyEnabled为true才生效
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                // 此处指定生成的apk文件名
                outputFileName = 'MVPDemo_' + rootProject.ext.android.versionName + '_' + releaseTime() + '_' + buildType.name + '.apk'
            }
    }

    // lint配置
    lintOptions {
        // 移除lint检查的error
        abortOnError false
        // 禁止掉某些lint检查
        disable 'NewApi'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(path: ':base')

    implementation rootProject.ext.androidDependencies.material
    annotationProcessor rootProject.ext.otherDependencies.arouterCompiler
    annotationProcessor rootProject.ext.otherDependencies.butterknifeCompiler
}
